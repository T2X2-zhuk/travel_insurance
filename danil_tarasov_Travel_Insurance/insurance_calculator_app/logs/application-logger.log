2025-06-15 16:35:34,069 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [travel_insurance.core.repositories.ClassifierRepositoryTest]: ClassifierRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-06-15 16:35:34,408 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration travel_insurance.InsuranceApplication for test class travel_insurance.core.repositories.ClassifierRepositoryTest
2025-06-15 16:35:35,354 [Test worker] INFO  t.c.r.ClassifierRepositoryTest - Starting ClassifierRepositoryTest using Java 19.0.2 with PID 4084 (started by Оксана in C:\Users\Оксана\IdeaProjects\travel_insurance\danil_tarasov_Travel_Insurance\insurance_calculator_app)
2025-06-15 16:35:35,357 [Test worker] INFO  t.c.r.ClassifierRepositoryTest - No active profile set, falling back to 1 default profile: "default"
2025-06-15 16:35:36,867 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-15 16:35:37,151 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 265 ms. Found 14 JPA repository interfaces.
2025-06-15 16:35:37,335 [Test worker] INFO  o.s.b.t.a.j.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor - Replacing 'dataSource' DataSource bean with embedded version
2025-06-15 16:35:37,957 [Test worker] INFO  o.s.j.d.e.EmbeddedDatabaseFactory - Starting embedded database: url='jdbc:h2:mem:51767593-02c2-4457-b98b-33ac6844419f;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2025-06-15 16:35:38,847 [Test worker] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-15 16:35:39,017 [Test worker] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.0.Final
2025-06-15 16:35:39,110 [Test worker] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-15 16:35:39,837 [Test worker] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-15 16:35:39,954 [Test worker] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-15 16:35:44,004 [Test worker] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-15 16:35:44,096 [Test worker] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-15 16:35:46,131 [Test worker] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-15 16:35:49,259 [Test worker] INFO  t.c.r.ClassifierRepositoryTest - Started ClassifierRepositoryTest in 14.516 seconds (process running for 19.053)
2025-06-15 16:35:52,831 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [travel_insurance.core.repositories.ClassifierValueRepositoryTest]: ClassifierValueRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-06-15 16:35:52,903 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration travel_insurance.InsuranceApplication for test class travel_insurance.core.repositories.ClassifierValueRepositoryTest
2025-06-15 16:35:53,422 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [travel_insurance.core.repositories.TMTMCountryDefaultDayRateRepositoryTest]: TMTMCountryDefaultDayRateRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-06-15 16:35:53,477 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration travel_insurance.InsuranceApplication for test class travel_insurance.core.repositories.TMTMCountryDefaultDayRateRepositoryTest
2025-06-15 16:35:58,103 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [travel_insurance.core.validations.integration.AgreementDateFromValidationIntegrationTest]: AgreementDateFromValidationIntegrationTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-06-15 16:35:58,348 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration travel_insurance.InsuranceApplication for test class travel_insurance.core.validations.integration.AgreementDateFromValidationIntegrationTest
2025-06-15 16:35:58,621 [Test worker] INFO  t.c.v.i.AgreementDateFromValidationIntegrationTest - Starting AgreementDateFromValidationIntegrationTest using Java 19.0.2 with PID 4084 (started by Оксана in C:\Users\Оксана\IdeaProjects\travel_insurance\danil_tarasov_Travel_Insurance\insurance_calculator_app)
2025-06-15 16:35:58,631 [Test worker] INFO  t.c.v.i.AgreementDateFromValidationIntegrationTest - No active profile set, falling back to 1 default profile: "default"
2025-06-15 16:36:00,189 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-15 16:36:00,429 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 236 ms. Found 14 JPA repository interfaces.
2025-06-15 16:36:01,157 [Test worker] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-15 16:36:01,200 [Test worker] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn21: url=jdbc:h2:mem:testdb user=SA
2025-06-15 16:36:01,206 [Test worker] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-15 16:36:01,562 [Test worker] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-15 16:36:01,593 [Test worker] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-15 16:36:01,654 [Test worker] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-15 16:36:01,669 [Test worker] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-15 16:36:02,052 [Test worker] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-15 16:36:02,090 [Test worker] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-15 16:36:03,246 [Test worker] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-15 16:36:07,523 [Test worker] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-06-15 16:36:07,523 [Test worker] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-06-15 16:36:07,528 [Test worker] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
2025-06-15 16:36:07,564 [Test worker] INFO  t.c.v.i.AgreementDateFromValidationIntegrationTest - Started AgreementDateFromValidationIntegrationTest in 9.166 seconds (process running for 37.358)
2025-06-15 16:36:07,954 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [travel_insurance.restTest.internal.TravelGetAgreementControllerTestCase2]: TravelGetAgreementControllerTestCase2 does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-06-15 16:36:08,006 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration travel_insurance.InsuranceApplication for test class travel_insurance.restTest.internal.TravelGetAgreementControllerTestCase2
2025-06-15 16:36:08,317 [Test worker] INFO  t.r.i.TravelGetAgreementRequestLogger - REQUEST: agreement uuid = UNKNOWN_UUID
2025-06-15 16:36:08,487 [Test worker] INFO  t.r.i.TravelGetAgreementResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_18","description":"Agreement with uuid = UNKNOWN_UUID not found!"}]}
2025-06-15 16:36:08,488 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 170
2025-06-15 16:36:08,714 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [travel_insurance.restTest.v1.agreement.AgreementLevelV1TestCases]: AgreementLevelV1TestCases does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-06-15 16:36:08,762 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration travel_insurance.InsuranceApplication for test class travel_insurance.restTest.v1.agreement.AgreementLevelV1TestCases
2025-06-15 16:36:08,914 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2020-08-25","agreementDateTo":"2030-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_MEDICAL"]}
2025-06-15 16:36:08,925 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_1","description":"Field agreementDateFrom must be in the future!"}]}
2025-06-15 16:36:08,925 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 26
2025-06-15 16:36:08,953 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":null,"agreementDateTo":"2060-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_MEDICAL"]}
2025-06-15 16:36:08,962 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_2","description":"Field agreementDateFrom must not be empty!"}]}
2025-06-15 16:36:08,962 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 13
2025-06-15 16:36:08,990 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2029-08-25","agreementDateTo":"2020-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_MEDICAL"]}
2025-06-15 16:36:08,996 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_3","description":"Field agreementDateTo must be in the future!"},{"errorCode":"ERROR_CODE_5","description":"Field agreementDateFrom must be less than agreementDateTo!"}]}
2025-06-15 16:36:08,997 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 11
2025-06-15 16:36:09,031 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2030-10-30","agreementDateTo":null,"country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_MEDICAL"]}
2025-06-15 16:36:09,046 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_4","description":"Field agreementDateTo must not be empty!"}]}
2025-06-15 16:36:09,048 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 23
2025-06-15 16:36:09,084 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2030-05-20","agreementDateTo":"2025-10-10","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_MEDICAL"]}
2025-06-15 16:36:09,094 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_5","description":"Field agreementDateFrom must be less than agreementDateTo!"}]}
2025-06-15 16:36:09,094 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 19
2025-06-15 16:36:09,112 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":null,"personLastName":null,"personCode":null,"personBirthDate":null,"agreementDateFrom":null,"agreementDateTo":null,"country":null,"medicalRiskLimitLevel":null,"travelCost":null,"selectedRisks":["TRAVEL_MEDICAL"]}
2025-06-15 16:36:09,129 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_2","description":"Field agreementDateFrom must not be empty!"},{"errorCode":"ERROR_CODE_4","description":"Field agreementDateTo must not be empty!"},{"errorCode":"ERROR_CODE_10","description":"Field country must not be empty!"},{"errorCode":"ERROR_CODE_13","description":"Field medicalRiskLimitLevel must not be empty!"},{"errorCode":"ERROR_CODE_11","description":"Field personBirthDate must not be empty!"},{"errorCode":"ERROR_CODE_16","description":"Field personCode must not be empty!"},{"errorCode":"ERROR_CODE_7","description":"Field personFirstName must not be empty!"},{"errorCode":"ERROR_CODE_8","description":"Field personLastName must not be empty!"}]}
2025-06-15 16:36:09,129 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 21
2025-06-15 16:36:09,203 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":null,"personLastName":null,"personCode":null,"personBirthDate":null,"agreementDateFrom":null,"agreementDateTo":null,"country":null,"medicalRiskLimitLevel":null,"travelCost":null,"selectedRisks":null}
2025-06-15 16:36:09,209 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_2","description":"Field agreementDateFrom must not be empty!"},{"errorCode":"ERROR_CODE_4","description":"Field agreementDateTo must not be empty!"},{"errorCode":"ERROR_CODE_10","description":"Field country must not be empty!"},{"errorCode":"ERROR_CODE_6","description":"Field selectedRisks must not be empty!"},{"errorCode":"ERROR_CODE_11","description":"Field personBirthDate must not be empty!"},{"errorCode":"ERROR_CODE_16","description":"Field personCode must not be empty!"},{"errorCode":"ERROR_CODE_7","description":"Field personFirstName must not be empty!"},{"errorCode":"ERROR_CODE_8","description":"Field personLastName must not be empty!"}]}
2025-06-15 16:36:09,210 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 11
2025-06-15 16:36:09,240 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2050-05-29","agreementDateTo":"2060-05-29","country":"","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_MEDICAL"]}
2025-06-15 16:36:09,277 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_10","description":"Field country must not be empty!"}]}
2025-06-15 16:36:09,277 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 39
2025-06-15 16:36:09,334 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2050-05-29","agreementDateTo":"2060-05-29","country":null,"medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_MEDICAL"]}
2025-06-15 16:36:09,356 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_10","description":"Field country must not be empty!"}]}
2025-06-15 16:36:09,357 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 34
2025-06-15 16:36:09,374 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [travel_insurance.restTest.v1.person.PersonLevelV1TestCases]: PersonLevelV1TestCases does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-06-15 16:36:09,411 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration travel_insurance.InsuranceApplication for test class travel_insurance.restTest.v1.person.PersonLevelV1TestCases
2025-06-15 16:36:09,427 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2030-05-25","agreementDateTo":"2032-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_MEDICAL"]}
2025-06-15 16:36:09,432 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_7","description":"Field personFirstName must not be empty!"}]}
2025-06-15 16:36:09,432 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 8
2025-06-15 16:36:09,450 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_MEDICAL"]}
2025-06-15 16:36:09,455 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_8","description":"Field personLastName must not be empty!"}]}
2025-06-15 16:36:09,456 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 9
2025-06-15 16:36:09,473 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":null,"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_MEDICAL"]}
2025-06-15 16:36:09,477 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_11","description":"Field personBirthDate must not be empty!"}]}
2025-06-15 16:36:09,477 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 7
2025-06-15 16:36:09,496 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2030-05-29","agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_MEDICAL"]}
2025-06-15 16:36:09,502 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_12","description":"Field personBirthDate must be in the past!"}]}
2025-06-15 16:36:09,503 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 9
2025-06-15 16:36:09,532 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":null,"personBirthDate":"2000-05-29","agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_EVACUATION"]}
2025-06-15 16:36:09,592 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_16","description":"Field personCode must not be empty!"}]}
2025-06-15 16:36:09,595 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 72
2025-06-15 16:36:09,631 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":null,"personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2030-05-25","agreementDateTo":"2031-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_MEDICAL"]}
2025-06-15 16:36:09,641 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_7","description":"Field personFirstName must not be empty!"}]}
2025-06-15 16:36:09,641 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 18
2025-06-15 16:36:09,656 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":null,"personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_MEDICAL"]}
2025-06-15 16:36:09,660 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_8","description":"Field personLastName must not be empty!"}]}
2025-06-15 16:36:09,663 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 9
2025-06-15 16:36:09,679 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"","personBirthDate":"2000-05-29","agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_EVACUATION"]}
2025-06-15 16:36:09,684 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_16","description":"Field personCode must not be empty!"}]}
2025-06-15 16:36:09,685 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 7
2025-06-15 16:36:09,696 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [travel_insurance.restTest.v1.risk_travel_cancellation.TravelCancellationRiskV1TestCases]: TravelCancellationRiskV1TestCases does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-06-15 16:36:09,729 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration travel_insurance.InsuranceApplication for test class travel_insurance.restTest.v1.risk_travel_cancellation.TravelCancellationRiskV1TestCases
2025-06-15 16:36:09,768 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_CANCELLATION"]}
2025-06-15 16:36:09,783 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_19","description":"Field travelCost must not be empty!"}]}
2025-06-15 16:36:09,783 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 20
2025-06-15 16:36:09,824 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [travel_insurance.restTest.v1.risk_travel_medical.TravelMedicalRiskV1TestCases]: TravelMedicalRiskV1TestCases does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-06-15 16:36:09,879 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration travel_insurance.InsuranceApplication for test class travel_insurance.restTest.v1.risk_travel_medical.TravelMedicalRiskV1TestCases
2025-06-15 16:36:09,899 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_MEDICAL"]}
2025-06-15 16:36:10,233 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"uuid":"cb5395e8-ff73-47ec-8b82-cde52cd4f1a9","personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","agreementPremium":4028.75,"risks":[{"riskIc":"TRAVEL_MEDICAL","premium":4028.75}]}
2025-06-15 16:36:10,234 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 340
2025-06-15 16:36:10,278 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [travel_insurance.restTest.v1.risks.RiskLevelV1TestCases]: RiskLevelV1TestCases does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-06-15 16:36:10,358 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration travel_insurance.InsuranceApplication for test class travel_insurance.restTest.v1.risks.RiskLevelV1TestCases
2025-06-15 16:36:10,385 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":[]}
2025-06-15 16:36:10,393 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_6","description":"Field selectedRisks must not be empty!"}]}
2025-06-15 16:36:10,393 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 11
2025-06-15 16:36:10,411 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["NOT_VALID_RISK_IC_1"]}
2025-06-15 16:36:10,421 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_9","description":"Risk Type ic = NOT_VALID_RISK_IC_1 not supported!"}]}
2025-06-15 16:36:10,421 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 12
2025-06-15 16:36:10,441 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["NOT_VALID_RISK_IC_1","NOT_VALID_RISK_IC_2"]}
2025-06-15 16:36:10,458 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_9","description":"Risk Type ic = NOT_VALID_RISK_IC_1 not supported!"},{"errorCode":"ERROR_CODE_9","description":"Risk Type ic = NOT_VALID_RISK_IC_2 not supported!"}]}
2025-06-15 16:36:10,458 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 19
2025-06-15 16:36:10,473 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":null}
2025-06-15 16:36:10,476 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_6","description":"Field selectedRisks must not be empty!"}]}
2025-06-15 16:36:10,477 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 6
2025-06-15 16:36:10,488 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [travel_insurance.restTest.v2.agreement.AgreementLevelV2TestCases]: AgreementLevelV2TestCases does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-06-15 16:36:10,518 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration travel_insurance.InsuranceApplication for test class travel_insurance.restTest.v2.agreement.AgreementLevelV2TestCases
2025-06-15 16:36:10,561 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2010-05-29","agreementDateTo":"2050-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:36:10,567 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_1","description":"Field agreementDateFrom must be in the future!"}]}
2025-06-15 16:36:10,568 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 16
2025-06-15 16:36:10,595 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":null,"agreementDateTo":"2060-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:36:10,601 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_2","description":"Field agreementDateFrom must not be empty!"}]}
2025-06-15 16:36:10,604 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 12
2025-06-15 16:36:10,646 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2050-05-29","agreementDateTo":"2010-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:36:10,654 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_3","description":"Field agreementDateTo must be in the future!"},{"errorCode":"ERROR_CODE_5","description":"Field agreementDateFrom must be less than agreementDateTo!"}]}
2025-06-15 16:36:10,655 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 16
2025-06-15 16:36:10,710 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2060-05-29","agreementDateTo":null,"country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:36:10,724 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_4","description":"Field agreementDateTo must not be empty!"}]}
2025-06-15 16:36:10,725 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 27
2025-06-15 16:36:10,771 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2050-05-29","agreementDateTo":"2030-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:36:10,783 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_5","description":"Field agreementDateFrom must be less than agreementDateTo!"}]}
2025-06-15 16:36:10,785 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 26
2025-06-15 16:36:10,841 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2050-05-29","agreementDateTo":"2060-05-29","country":"NOT_SUPPORTED","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:36:10,856 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_15","description":"Country value = NOT_SUPPORTED not supported!"}]}
2025-06-15 16:36:10,857 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 43
2025-06-15 16:36:10,877 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2050-05-29","agreementDateTo":"2060-05-29","country":"","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:36:10,881 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_10","description":"Field country must not be empty!"}]}
2025-06-15 16:36:10,881 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 6
2025-06-15 16:36:10,922 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2050-05-29","agreementDateTo":"2060-05-29","country":null,"selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:36:10,926 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_10","description":"Field country must not be empty!"}]}
2025-06-15 16:36:10,926 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 11
2025-06-15 16:36:10,945 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [travel_insurance.restTest.v2.person.PersonLevelV2TestCases]: PersonLevelV2TestCases does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-06-15 16:36:10,982 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration travel_insurance.InsuranceApplication for test class travel_insurance.restTest.v2.person.PersonLevelV2TestCases
2025-06-15 16:36:11,004 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":null,"medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":null,"medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:36:11,008 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_11","description":"Field personBirthDate must not be empty!"},{"errorCode":"ERROR_CODE_11","description":"Field personBirthDate must not be empty!"}]}
2025-06-15 16:36:11,008 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 8
2025-06-15 16:36:11,025 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":null,"personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":null,"personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:36:11,029 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_7","description":"Field personFirstName must not be empty!"},{"errorCode":"ERROR_CODE_7","description":"Field personFirstName must not be empty!"}]}
2025-06-15 16:36:11,030 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 7
2025-06-15 16:36:11,046 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:36:11,049 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_7","description":"Field personFirstName must not be empty!"}]}
2025-06-15 16:36:11,050 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 6
2025-06-15 16:36:11,066 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"","personCode":"123456-12345","personBirthDate":"2000-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:36:11,069 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_8","description":"Field personLastName must not be empty!"}]}
2025-06-15 16:36:11,069 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 5
2025-06-15 16:36:11,082 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":null,"personCode":"123456-12345","personBirthDate":"2000-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":null,"personCode":"123456-12345","personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:36:11,086 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_8","description":"Field personLastName must not be empty!"},{"errorCode":"ERROR_CODE_8","description":"Field personLastName must not be empty!"}]}
2025-06-15 16:36:11,086 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 6
2025-06-15 16:36:11,104 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":null,"medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:36:11,110 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_11","description":"Field personBirthDate must not be empty!"}]}
2025-06-15 16:36:11,111 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 8
2025-06-15 16:36:11,124 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2100-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:36:11,127 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_12","description":"Field personBirthDate must be in the past!"}]}
2025-06-15 16:36:11,127 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 6
2025-06-15 16:36:11,142 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:36:11,146 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_7","description":"Field personFirstName must not be empty!"},{"errorCode":"ERROR_CODE_7","description":"Field personFirstName must not be empty!"}]}
2025-06-15 16:36:11,146 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 6
2025-06-15 16:36:11,161 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":null,"personBirthDate":"2000-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:36:11,164 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_16","description":"Field personCode must not be empty!"}]}
2025-06-15 16:36:11,166 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 7
2025-06-15 16:36:11,182 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"","personBirthDate":"2000-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"","personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:36:11,186 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_16","description":"Field personCode must not be empty!"},{"errorCode":"ERROR_CODE_16","description":"Field personCode must not be empty!"}]}
2025-06-15 16:36:11,186 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 6
2025-06-15 16:36:11,199 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":null,"personBirthDate":"2000-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":null,"personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:36:11,204 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_16","description":"Field personCode must not be empty!"},{"errorCode":"ERROR_CODE_16","description":"Field personCode must not be empty!"}]}
2025-06-15 16:36:11,204 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 7
2025-06-15 16:36:11,222 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":null,"personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:36:11,226 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_7","description":"Field personFirstName must not be empty!"}]}
2025-06-15 16:36:11,227 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 6
2025-06-15 16:36:11,240 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":null,"personCode":"123456-12345","personBirthDate":"2000-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:36:11,243 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_8","description":"Field personLastName must not be empty!"}]}
2025-06-15 16:36:11,244 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 5
2025-06-15 16:36:11,258 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"","personBirthDate":"2000-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:36:11,262 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_16","description":"Field personCode must not be empty!"}]}
2025-06-15 16:36:11,262 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 6
2025-06-15 16:36:11,274 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2100-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2100-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:36:11,277 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_12","description":"Field personBirthDate must be in the past!"},{"errorCode":"ERROR_CODE_12","description":"Field personBirthDate must be in the past!"}]}
2025-06-15 16:36:11,278 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 5
2025-06-15 16:36:11,291 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"","personCode":"123456-12345","personBirthDate":"2000-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"","personCode":"123456-12345","personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:36:11,294 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_8","description":"Field personLastName must not be empty!"},{"errorCode":"ERROR_CODE_8","description":"Field personLastName must not be empty!"}]}
2025-06-15 16:36:11,294 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 5
2025-06-15 16:36:11,303 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [travel_insurance.restTest.v2.risk_travel_cancellation.TravelCancellationRiskV2TestCases]: TravelCancellationRiskV2TestCases does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-06-15 16:36:11,331 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration travel_insurance.InsuranceApplication for test class travel_insurance.restTest.v2.risk_travel_cancellation.TravelCancellationRiskV2TestCases
2025-06-15 16:36:11,343 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_CANCELLATION"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:36:11,346 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_19","description":"Field travelCost must not be empty!"},{"errorCode":"ERROR_CODE_19","description":"Field travelCost must not be empty!"}]}
2025-06-15 16:36:11,347 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 6
2025-06-15 16:36:11,356 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [travel_insurance.restTest.v2.risk_travel_medical.TravelMedicalRiskV2TestCases]: TravelMedicalRiskV2TestCases does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-06-15 16:36:11,382 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration travel_insurance.InsuranceApplication for test class travel_insurance.restTest.v2.risk_travel_medical.TravelMedicalRiskV2TestCases
2025-06-15 16:36:11,394 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2050-05-29","agreementDateTo":"2060-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"","travelCost":null}]}
2025-06-15 16:36:11,398 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_13","description":"Field medicalRiskLimitLevel must not be empty!"}]}
2025-06-15 16:36:11,400 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 8
2025-06-15 16:36:11,417 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2050-05-29","agreementDateTo":"2060-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":null,"travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":null,"travelCost":null}]}
2025-06-15 16:36:11,419 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_13","description":"Field medicalRiskLimitLevel must not be empty!"},{"errorCode":"ERROR_CODE_13","description":"Field medicalRiskLimitLevel must not be empty!"}]}
2025-06-15 16:36:11,420 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 7
2025-06-15 16:36:11,432 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2050-05-29","agreementDateTo":"2060-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"NOT_SUPPORTED","travelCost":null}]}
2025-06-15 16:36:11,439 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_14","description":"MedicalRiskLimitLevel value = NOT_SUPPORTED not supported!"}]}
2025-06-15 16:36:11,440 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 9
2025-06-15 16:36:11,456 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2050-05-29","agreementDateTo":"2060-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"","travelCost":null}]}
2025-06-15 16:36:11,459 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_13","description":"Field medicalRiskLimitLevel must not be empty!"},{"errorCode":"ERROR_CODE_13","description":"Field medicalRiskLimitLevel must not be empty!"}]}
2025-06-15 16:36:11,459 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 6
2025-06-15 16:36:11,475 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2050-05-29","agreementDateTo":"2060-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":null,"travelCost":null}]}
2025-06-15 16:36:11,479 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_13","description":"Field medicalRiskLimitLevel must not be empty!"}]}
2025-06-15 16:36:11,480 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 6
2025-06-15 16:36:11,497 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2050-05-29","agreementDateTo":"2060-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"NOT_SUPPORTED_1","travelCost":null},{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"NOT_SUPPORTED_2","travelCost":null}]}
2025-06-15 16:36:11,506 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_14","description":"MedicalRiskLimitLevel value = NOT_SUPPORTED_1 not supported!"},{"errorCode":"ERROR_CODE_14","description":"MedicalRiskLimitLevel value = NOT_SUPPORTED_2 not supported!"}]}
2025-06-15 16:36:11,506 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 11
2025-06-15 16:36:11,521 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [travel_insurance.restTest.v2.risks.RiskLevelV2TestCases]: RiskLevelV2TestCases does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-06-15 16:36:11,562 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration travel_insurance.InsuranceApplication for test class travel_insurance.restTest.v2.risks.RiskLevelV2TestCases
2025-06-15 16:36:11,581 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2050-05-29","agreementDateTo":"2060-05-29","country":"SPAIN","selectedRisks":[],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:36:11,589 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_6","description":"Field selectedRisks must not be empty!"}]}
2025-06-15 16:36:11,589 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 12
2025-06-15 16:36:11,628 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2050-05-29","agreementDateTo":"2060-05-29","country":"SPAIN","selectedRisks":["NOT_SUPPORTED"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:36:11,637 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_9","description":"Risk Type ic = NOT_SUPPORTED not supported!"}]}
2025-06-15 16:36:11,637 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 15
2025-06-15 16:36:11,663 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2050-05-29","agreementDateTo":"2060-05-29","country":"SPAIN","selectedRisks":["NOT_SUPPORTED_1","NOT_SUPPORTED_2"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:36:11,676 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_9","description":"Risk Type ic = NOT_SUPPORTED_1 not supported!"},{"errorCode":"ERROR_CODE_9","description":"Risk Type ic = NOT_SUPPORTED_2 not supported!"}]}
2025-06-15 16:36:11,676 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 18
2025-06-15 16:36:11,698 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2030-05-25","agreementDateTo":"2031-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL","TRAVEL_CANCELLATION"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":100.00},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":100.00}]}
2025-06-15 16:36:11,785 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"uuid":"b09cdf68-68fc-4356-a6fc-bc013ed7e21f","agreementDateFrom":"2030-05-25","agreementDateTo":"2031-05-29","country":"SPAIN","agreementPremium":2504.50,"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":100.00,"personPremium":1052.75,"personRisks":[{"riskIc":"TRAVEL_MEDICAL","premium":1014.75},{"riskIc":"TRAVEL_CANCELLATION","premium":38.00}]},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":100.00,"personPremium":1451.75,"personRisks":[{"riskIc":"TRAVEL_MEDICAL","premium":1383.75},{"riskIc":"TRAVEL_CANCELLATION","premium":68.00}]}]}
2025-06-15 16:36:11,785 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 96
2025-06-15 16:36:11,806 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2050-05-29","agreementDateTo":"2060-05-29","country":"SPAIN","selectedRisks":null,"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:36:11,809 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_6","description":"Field selectedRisks must not be empty!"}]}
2025-06-15 16:36:11,809 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 6
2025-06-15 16:36:11,838 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-15 16:36:11,854 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-15 16:36:11,855 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-15 16:36:11,862 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-15 16:37:17,726 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [travel_insurance.core.repositories.ClassifierRepositoryTest]: ClassifierRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-06-15 16:37:18,066 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration travel_insurance.InsuranceApplication for test class travel_insurance.core.repositories.ClassifierRepositoryTest
2025-06-15 16:37:19,173 [Test worker] INFO  t.c.r.ClassifierRepositoryTest - Starting ClassifierRepositoryTest using Java 19.0.2 with PID 400 (started by Оксана in C:\Users\Оксана\IdeaProjects\travel_insurance\danil_tarasov_Travel_Insurance\insurance_calculator_app)
2025-06-15 16:37:19,179 [Test worker] INFO  t.c.r.ClassifierRepositoryTest - No active profile set, falling back to 1 default profile: "default"
2025-06-15 16:37:20,802 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-15 16:37:21,178 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 356 ms. Found 14 JPA repository interfaces.
2025-06-15 16:37:21,310 [Test worker] INFO  o.s.b.t.a.j.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor - Replacing 'dataSource' DataSource bean with embedded version
2025-06-15 16:37:21,859 [Test worker] INFO  o.s.j.d.e.EmbeddedDatabaseFactory - Starting embedded database: url='jdbc:h2:mem:6654704a-6042-42ea-8c82-08e6fcc31027;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2025-06-15 16:37:23,334 [Test worker] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-15 16:37:23,545 [Test worker] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.0.Final
2025-06-15 16:37:23,622 [Test worker] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-15 16:37:24,432 [Test worker] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-15 16:37:24,584 [Test worker] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-15 16:37:27,568 [Test worker] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-15 16:37:27,635 [Test worker] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-15 16:37:28,940 [Test worker] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-15 16:37:30,708 [Test worker] INFO  t.c.r.ClassifierRepositoryTest - Started ClassifierRepositoryTest in 12.49 seconds (process running for 15.615)
2025-06-15 16:37:32,346 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [travel_insurance.core.repositories.ClassifierValueRepositoryTest]: ClassifierValueRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-06-15 16:37:32,380 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration travel_insurance.InsuranceApplication for test class travel_insurance.core.repositories.ClassifierValueRepositoryTest
2025-06-15 16:37:32,609 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [travel_insurance.core.repositories.TMTMCountryDefaultDayRateRepositoryTest]: TMTMCountryDefaultDayRateRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-06-15 16:37:32,651 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration travel_insurance.InsuranceApplication for test class travel_insurance.core.repositories.TMTMCountryDefaultDayRateRepositoryTest
2025-06-15 16:37:37,183 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [travel_insurance.core.validations.integration.AgreementDateFromValidationIntegrationTest]: AgreementDateFromValidationIntegrationTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-06-15 16:37:37,325 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration travel_insurance.InsuranceApplication for test class travel_insurance.core.validations.integration.AgreementDateFromValidationIntegrationTest
2025-06-15 16:37:37,472 [Test worker] INFO  t.c.v.i.AgreementDateFromValidationIntegrationTest - Starting AgreementDateFromValidationIntegrationTest using Java 19.0.2 with PID 400 (started by Оксана in C:\Users\Оксана\IdeaProjects\travel_insurance\danil_tarasov_Travel_Insurance\insurance_calculator_app)
2025-06-15 16:37:37,473 [Test worker] INFO  t.c.v.i.AgreementDateFromValidationIntegrationTest - No active profile set, falling back to 1 default profile: "default"
2025-06-15 16:37:39,714 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-15 16:37:39,909 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 193 ms. Found 14 JPA repository interfaces.
2025-06-15 16:37:40,739 [Test worker] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-15 16:37:40,789 [Test worker] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn21: url=jdbc:h2:mem:testdb user=SA
2025-06-15 16:37:40,923 [Test worker] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-15 16:37:41,184 [Test worker] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-15 16:37:41,199 [Test worker] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-15 16:37:41,221 [Test worker] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-15 16:37:41,231 [Test worker] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-15 16:37:41,614 [Test worker] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-15 16:37:41,632 [Test worker] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-15 16:37:42,602 [Test worker] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-15 16:37:46,813 [Test worker] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-06-15 16:37:46,813 [Test worker] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-06-15 16:37:46,819 [Test worker] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 4 ms
2025-06-15 16:37:46,860 [Test worker] INFO  t.c.v.i.AgreementDateFromValidationIntegrationTest - Started AgreementDateFromValidationIntegrationTest in 9.501 seconds (process running for 31.767)
2025-06-15 16:37:47,153 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [travel_insurance.restTest.internal.TravelGetAgreementControllerTestCase2]: TravelGetAgreementControllerTestCase2 does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-06-15 16:37:47,205 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration travel_insurance.InsuranceApplication for test class travel_insurance.restTest.internal.TravelGetAgreementControllerTestCase2
2025-06-15 16:37:47,462 [Test worker] INFO  t.r.i.TravelGetAgreementRequestLogger - REQUEST: agreement uuid = UNKNOWN_UUID
2025-06-15 16:37:47,606 [Test worker] INFO  t.r.i.TravelGetAgreementResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_18","description":"Agreement with uuid = UNKNOWN_UUID not found!"}]}
2025-06-15 16:37:47,607 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 144
2025-06-15 16:37:47,766 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [travel_insurance.restTest.v1.agreement.AgreementLevelV1TestCases]: AgreementLevelV1TestCases does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-06-15 16:37:47,795 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration travel_insurance.InsuranceApplication for test class travel_insurance.restTest.v1.agreement.AgreementLevelV1TestCases
2025-06-15 16:37:47,906 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2020-08-25","agreementDateTo":"2030-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_MEDICAL"]}
2025-06-15 16:37:47,915 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_1","description":"Field agreementDateFrom must be in the future!"}]}
2025-06-15 16:37:47,916 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 18
2025-06-15 16:37:47,955 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":null,"agreementDateTo":"2060-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_MEDICAL"]}
2025-06-15 16:37:47,967 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_2","description":"Field agreementDateFrom must not be empty!"}]}
2025-06-15 16:37:47,967 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 25
2025-06-15 16:37:48,000 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2029-08-25","agreementDateTo":"2020-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_MEDICAL"]}
2025-06-15 16:37:48,006 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_3","description":"Field agreementDateTo must be in the future!"},{"errorCode":"ERROR_CODE_5","description":"Field agreementDateFrom must be less than agreementDateTo!"}]}
2025-06-15 16:37:48,007 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 12
2025-06-15 16:37:48,031 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2030-10-30","agreementDateTo":null,"country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_MEDICAL"]}
2025-06-15 16:37:48,036 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_4","description":"Field agreementDateTo must not be empty!"}]}
2025-06-15 16:37:48,043 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 16
2025-06-15 16:37:48,084 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2030-05-20","agreementDateTo":"2025-10-10","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_MEDICAL"]}
2025-06-15 16:37:48,097 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_5","description":"Field agreementDateFrom must be less than agreementDateTo!"}]}
2025-06-15 16:37:48,098 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 17
2025-06-15 16:37:48,127 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":null,"personLastName":null,"personCode":null,"personBirthDate":null,"agreementDateFrom":null,"agreementDateTo":null,"country":null,"medicalRiskLimitLevel":null,"travelCost":null,"selectedRisks":["TRAVEL_MEDICAL"]}
2025-06-15 16:37:48,136 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_2","description":"Field agreementDateFrom must not be empty!"},{"errorCode":"ERROR_CODE_4","description":"Field agreementDateTo must not be empty!"},{"errorCode":"ERROR_CODE_10","description":"Field country must not be empty!"},{"errorCode":"ERROR_CODE_13","description":"Field medicalRiskLimitLevel must not be empty!"},{"errorCode":"ERROR_CODE_11","description":"Field personBirthDate must not be empty!"},{"errorCode":"ERROR_CODE_16","description":"Field personCode must not be empty!"},{"errorCode":"ERROR_CODE_7","description":"Field personFirstName must not be empty!"},{"errorCode":"ERROR_CODE_8","description":"Field personLastName must not be empty!"}]}
2025-06-15 16:37:48,137 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 14
2025-06-15 16:37:48,181 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":null,"personLastName":null,"personCode":null,"personBirthDate":null,"agreementDateFrom":null,"agreementDateTo":null,"country":null,"medicalRiskLimitLevel":null,"travelCost":null,"selectedRisks":null}
2025-06-15 16:37:48,193 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_2","description":"Field agreementDateFrom must not be empty!"},{"errorCode":"ERROR_CODE_4","description":"Field agreementDateTo must not be empty!"},{"errorCode":"ERROR_CODE_10","description":"Field country must not be empty!"},{"errorCode":"ERROR_CODE_6","description":"Field selectedRisks must not be empty!"},{"errorCode":"ERROR_CODE_11","description":"Field personBirthDate must not be empty!"},{"errorCode":"ERROR_CODE_16","description":"Field personCode must not be empty!"},{"errorCode":"ERROR_CODE_7","description":"Field personFirstName must not be empty!"},{"errorCode":"ERROR_CODE_8","description":"Field personLastName must not be empty!"}]}
2025-06-15 16:37:48,193 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 15
2025-06-15 16:37:48,233 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2050-05-29","agreementDateTo":"2060-05-29","country":"","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_MEDICAL"]}
2025-06-15 16:37:48,238 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_10","description":"Field country must not be empty!"}]}
2025-06-15 16:37:48,238 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 9
2025-06-15 16:37:48,259 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2050-05-29","agreementDateTo":"2060-05-29","country":null,"medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_MEDICAL"]}
2025-06-15 16:37:48,264 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_10","description":"Field country must not be empty!"}]}
2025-06-15 16:37:48,264 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 11
2025-06-15 16:37:48,280 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [travel_insurance.restTest.v1.person.PersonLevelV1TestCases]: PersonLevelV1TestCases does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-06-15 16:37:48,399 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration travel_insurance.InsuranceApplication for test class travel_insurance.restTest.v1.person.PersonLevelV1TestCases
2025-06-15 16:37:48,422 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2030-05-25","agreementDateTo":"2032-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_MEDICAL"]}
2025-06-15 16:37:48,426 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_7","description":"Field personFirstName must not be empty!"}]}
2025-06-15 16:37:48,427 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 13
2025-06-15 16:37:48,442 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_MEDICAL"]}
2025-06-15 16:37:48,452 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_8","description":"Field personLastName must not be empty!"}]}
2025-06-15 16:37:48,454 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 14
2025-06-15 16:37:48,477 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":null,"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_MEDICAL"]}
2025-06-15 16:37:48,481 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_11","description":"Field personBirthDate must not be empty!"}]}
2025-06-15 16:37:48,481 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 10
2025-06-15 16:37:48,503 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2030-05-29","agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_MEDICAL"]}
2025-06-15 16:37:48,509 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_12","description":"Field personBirthDate must be in the past!"}]}
2025-06-15 16:37:48,510 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 13
2025-06-15 16:37:48,543 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":null,"personBirthDate":"2000-05-29","agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_EVACUATION"]}
2025-06-15 16:37:48,588 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_16","description":"Field personCode must not be empty!"}]}
2025-06-15 16:37:48,588 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 55
2025-06-15 16:37:48,608 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":null,"personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2030-05-25","agreementDateTo":"2031-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_MEDICAL"]}
2025-06-15 16:37:48,616 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_7","description":"Field personFirstName must not be empty!"}]}
2025-06-15 16:37:48,617 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 11
2025-06-15 16:37:48,640 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":null,"personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_MEDICAL"]}
2025-06-15 16:37:48,648 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_8","description":"Field personLastName must not be empty!"}]}
2025-06-15 16:37:48,650 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 11
2025-06-15 16:37:48,721 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"","personBirthDate":"2000-05-29","agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_EVACUATION"]}
2025-06-15 16:37:48,725 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_16","description":"Field personCode must not be empty!"}]}
2025-06-15 16:37:48,726 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 7
2025-06-15 16:37:48,736 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [travel_insurance.restTest.v1.risk_travel_cancellation.TravelCancellationRiskV1TestCases]: TravelCancellationRiskV1TestCases does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-06-15 16:37:48,765 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration travel_insurance.InsuranceApplication for test class travel_insurance.restTest.v1.risk_travel_cancellation.TravelCancellationRiskV1TestCases
2025-06-15 16:37:48,815 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_CANCELLATION"]}
2025-06-15 16:37:48,823 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_19","description":"Field travelCost must not be empty!"}]}
2025-06-15 16:37:48,824 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 11
2025-06-15 16:37:48,837 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [travel_insurance.restTest.v1.risk_travel_medical.TravelMedicalRiskV1TestCases]: TravelMedicalRiskV1TestCases does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-06-15 16:37:48,865 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration travel_insurance.InsuranceApplication for test class travel_insurance.restTest.v1.risk_travel_medical.TravelMedicalRiskV1TestCases
2025-06-15 16:37:48,877 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_MEDICAL"]}
2025-06-15 16:37:48,999 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"uuid":"68df85c5-26a3-4d96-b974-5fbb472fdf05","personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","agreementPremium":4028.75,"risks":[{"riskIc":"TRAVEL_MEDICAL","premium":4028.75}]}
2025-06-15 16:37:48,999 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 124
2025-06-15 16:37:49,021 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [travel_insurance.restTest.v1.risks.RiskLevelV1TestCases]: RiskLevelV1TestCases does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-06-15 16:37:49,040 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration travel_insurance.InsuranceApplication for test class travel_insurance.restTest.v1.risks.RiskLevelV1TestCases
2025-06-15 16:37:49,053 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":[]}
2025-06-15 16:37:49,056 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_6","description":"Field selectedRisks must not be empty!"}]}
2025-06-15 16:37:49,059 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 8
2025-06-15 16:37:49,078 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["NOT_VALID_RISK_IC_1"]}
2025-06-15 16:37:49,092 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_9","description":"Risk Type ic = NOT_VALID_RISK_IC_1 not supported!"}]}
2025-06-15 16:37:49,093 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 17
2025-06-15 16:37:49,107 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["NOT_VALID_RISK_IC_1","NOT_VALID_RISK_IC_2"]}
2025-06-15 16:37:49,116 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_9","description":"Risk Type ic = NOT_VALID_RISK_IC_1 not supported!"},{"errorCode":"ERROR_CODE_9","description":"Risk Type ic = NOT_VALID_RISK_IC_2 not supported!"}]}
2025-06-15 16:37:49,116 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 11
2025-06-15 16:37:49,131 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":null}
2025-06-15 16:37:49,136 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_6","description":"Field selectedRisks must not be empty!"}]}
2025-06-15 16:37:49,136 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 6
2025-06-15 16:37:49,146 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [travel_insurance.restTest.v2.agreement.AgreementLevelV2TestCases]: AgreementLevelV2TestCases does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-06-15 16:37:49,172 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration travel_insurance.InsuranceApplication for test class travel_insurance.restTest.v2.agreement.AgreementLevelV2TestCases
2025-06-15 16:37:49,195 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2010-05-29","agreementDateTo":"2050-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:37:49,243 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_1","description":"Field agreementDateFrom must be in the future!"}]}
2025-06-15 16:37:49,247 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 56
2025-06-15 16:37:49,366 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":null,"agreementDateTo":"2060-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:37:49,374 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_2","description":"Field agreementDateFrom must not be empty!"}]}
2025-06-15 16:37:49,375 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 94
2025-06-15 16:37:49,458 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2050-05-29","agreementDateTo":"2010-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:37:49,476 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_3","description":"Field agreementDateTo must be in the future!"},{"errorCode":"ERROR_CODE_5","description":"Field agreementDateFrom must be less than agreementDateTo!"}]}
2025-06-15 16:37:49,477 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 30
2025-06-15 16:37:49,873 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2060-05-29","agreementDateTo":null,"country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:37:49,880 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_4","description":"Field agreementDateTo must not be empty!"}]}
2025-06-15 16:37:49,880 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 11
2025-06-15 16:37:49,905 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2050-05-29","agreementDateTo":"2030-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:37:49,911 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_5","description":"Field agreementDateFrom must be less than agreementDateTo!"}]}
2025-06-15 16:37:49,912 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 12
2025-06-15 16:37:49,971 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2050-05-29","agreementDateTo":"2060-05-29","country":"NOT_SUPPORTED","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:37:49,981 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_15","description":"Country value = NOT_SUPPORTED not supported!"}]}
2025-06-15 16:37:49,982 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 15
2025-06-15 16:37:50,016 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2050-05-29","agreementDateTo":"2060-05-29","country":"","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:37:50,020 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_10","description":"Field country must not be empty!"}]}
2025-06-15 16:37:50,021 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 20
2025-06-15 16:37:50,056 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2050-05-29","agreementDateTo":"2060-05-29","country":null,"selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:37:50,064 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_10","description":"Field country must not be empty!"}]}
2025-06-15 16:37:50,065 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 17
2025-06-15 16:37:50,099 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [travel_insurance.restTest.v2.person.PersonLevelV2TestCases]: PersonLevelV2TestCases does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-06-15 16:37:50,159 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration travel_insurance.InsuranceApplication for test class travel_insurance.restTest.v2.person.PersonLevelV2TestCases
2025-06-15 16:37:50,180 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":null,"medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":null,"medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:37:50,185 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_11","description":"Field personBirthDate must not be empty!"},{"errorCode":"ERROR_CODE_11","description":"Field personBirthDate must not be empty!"}]}
2025-06-15 16:37:50,185 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 7
2025-06-15 16:37:50,214 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":null,"personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":null,"personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:37:50,222 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_7","description":"Field personFirstName must not be empty!"},{"errorCode":"ERROR_CODE_7","description":"Field personFirstName must not be empty!"}]}
2025-06-15 16:37:50,225 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 16
2025-06-15 16:37:50,246 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:37:50,251 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_7","description":"Field personFirstName must not be empty!"}]}
2025-06-15 16:37:50,252 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 8
2025-06-15 16:37:50,271 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"","personCode":"123456-12345","personBirthDate":"2000-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:37:50,286 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_8","description":"Field personLastName must not be empty!"}]}
2025-06-15 16:37:50,287 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 18
2025-06-15 16:37:50,348 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":null,"personCode":"123456-12345","personBirthDate":"2000-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":null,"personCode":"123456-12345","personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:37:50,352 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_8","description":"Field personLastName must not be empty!"},{"errorCode":"ERROR_CODE_8","description":"Field personLastName must not be empty!"}]}
2025-06-15 16:37:50,352 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 7
2025-06-15 16:37:50,372 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":null,"medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:37:50,376 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_11","description":"Field personBirthDate must not be empty!"}]}
2025-06-15 16:37:50,376 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 5
2025-06-15 16:37:50,389 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2100-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:37:50,392 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_12","description":"Field personBirthDate must be in the past!"}]}
2025-06-15 16:37:50,393 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 6
2025-06-15 16:37:50,407 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:37:50,410 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_7","description":"Field personFirstName must not be empty!"},{"errorCode":"ERROR_CODE_7","description":"Field personFirstName must not be empty!"}]}
2025-06-15 16:37:50,411 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 6
2025-06-15 16:37:50,427 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":null,"personBirthDate":"2000-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:37:50,431 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_16","description":"Field personCode must not be empty!"}]}
2025-06-15 16:37:50,431 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 6
2025-06-15 16:37:50,446 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"","personBirthDate":"2000-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"","personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:37:50,449 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_16","description":"Field personCode must not be empty!"},{"errorCode":"ERROR_CODE_16","description":"Field personCode must not be empty!"}]}
2025-06-15 16:37:50,449 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 5
2025-06-15 16:37:50,462 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":null,"personBirthDate":"2000-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":null,"personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:37:50,466 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_16","description":"Field personCode must not be empty!"},{"errorCode":"ERROR_CODE_16","description":"Field personCode must not be empty!"}]}
2025-06-15 16:37:50,468 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 7
2025-06-15 16:37:50,480 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":null,"personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:37:50,484 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_7","description":"Field personFirstName must not be empty!"}]}
2025-06-15 16:37:50,485 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 7
2025-06-15 16:37:50,497 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":null,"personCode":"123456-12345","personBirthDate":"2000-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:37:50,500 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_8","description":"Field personLastName must not be empty!"}]}
2025-06-15 16:37:50,500 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 5
2025-06-15 16:37:50,512 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"","personBirthDate":"2000-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:37:50,516 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_16","description":"Field personCode must not be empty!"}]}
2025-06-15 16:37:50,517 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 6
2025-06-15 16:37:50,530 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2100-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2100-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:37:50,533 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_12","description":"Field personBirthDate must be in the past!"},{"errorCode":"ERROR_CODE_12","description":"Field personBirthDate must be in the past!"}]}
2025-06-15 16:37:50,534 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 6
2025-06-15 16:37:50,546 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"","personCode":"123456-12345","personBirthDate":"2000-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"","personCode":"123456-12345","personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:37:50,551 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_8","description":"Field personLastName must not be empty!"},{"errorCode":"ERROR_CODE_8","description":"Field personLastName must not be empty!"}]}
2025-06-15 16:37:50,552 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 8
2025-06-15 16:37:50,561 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [travel_insurance.restTest.v2.risk_travel_cancellation.TravelCancellationRiskV2TestCases]: TravelCancellationRiskV2TestCases does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-06-15 16:37:50,585 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration travel_insurance.InsuranceApplication for test class travel_insurance.restTest.v2.risk_travel_cancellation.TravelCancellationRiskV2TestCases
2025-06-15 16:37:50,596 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_CANCELLATION"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:37:50,599 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_19","description":"Field travelCost must not be empty!"},{"errorCode":"ERROR_CODE_19","description":"Field travelCost must not be empty!"}]}
2025-06-15 16:37:50,600 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 5
2025-06-15 16:37:50,608 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [travel_insurance.restTest.v2.risk_travel_medical.TravelMedicalRiskV2TestCases]: TravelMedicalRiskV2TestCases does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-06-15 16:37:50,632 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration travel_insurance.InsuranceApplication for test class travel_insurance.restTest.v2.risk_travel_medical.TravelMedicalRiskV2TestCases
2025-06-15 16:37:50,644 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2050-05-29","agreementDateTo":"2060-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"","travelCost":null}]}
2025-06-15 16:37:50,652 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_13","description":"Field medicalRiskLimitLevel must not be empty!"}]}
2025-06-15 16:37:50,653 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 11
2025-06-15 16:37:50,666 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2050-05-29","agreementDateTo":"2060-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":null,"travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":null,"travelCost":null}]}
2025-06-15 16:37:50,669 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_13","description":"Field medicalRiskLimitLevel must not be empty!"},{"errorCode":"ERROR_CODE_13","description":"Field medicalRiskLimitLevel must not be empty!"}]}
2025-06-15 16:37:50,669 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 5
2025-06-15 16:37:50,682 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2050-05-29","agreementDateTo":"2060-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"NOT_SUPPORTED","travelCost":null}]}
2025-06-15 16:37:50,687 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_14","description":"MedicalRiskLimitLevel value = NOT_SUPPORTED not supported!"}]}
2025-06-15 16:37:50,688 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 8
2025-06-15 16:37:50,708 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2050-05-29","agreementDateTo":"2060-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"","travelCost":null}]}
2025-06-15 16:37:50,711 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_13","description":"Field medicalRiskLimitLevel must not be empty!"},{"errorCode":"ERROR_CODE_13","description":"Field medicalRiskLimitLevel must not be empty!"}]}
2025-06-15 16:37:50,711 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 5
2025-06-15 16:37:50,725 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2050-05-29","agreementDateTo":"2060-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":null,"travelCost":null}]}
2025-06-15 16:37:50,729 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_13","description":"Field medicalRiskLimitLevel must not be empty!"}]}
2025-06-15 16:37:50,729 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 7
2025-06-15 16:37:50,743 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2050-05-29","agreementDateTo":"2060-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"NOT_SUPPORTED_1","travelCost":null},{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"NOT_SUPPORTED_2","travelCost":null}]}
2025-06-15 16:37:50,751 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_14","description":"MedicalRiskLimitLevel value = NOT_SUPPORTED_1 not supported!"},{"errorCode":"ERROR_CODE_14","description":"MedicalRiskLimitLevel value = NOT_SUPPORTED_2 not supported!"}]}
2025-06-15 16:37:50,752 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 10
2025-06-15 16:37:50,760 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [travel_insurance.restTest.v2.risks.RiskLevelV2TestCases]: RiskLevelV2TestCases does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-06-15 16:37:50,786 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration travel_insurance.InsuranceApplication for test class travel_insurance.restTest.v2.risks.RiskLevelV2TestCases
2025-06-15 16:37:50,798 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2050-05-29","agreementDateTo":"2060-05-29","country":"SPAIN","selectedRisks":[],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:37:50,802 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_6","description":"Field selectedRisks must not be empty!"}]}
2025-06-15 16:37:50,802 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 6
2025-06-15 16:37:50,814 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2050-05-29","agreementDateTo":"2060-05-29","country":"SPAIN","selectedRisks":["NOT_SUPPORTED"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:37:50,820 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_9","description":"Risk Type ic = NOT_SUPPORTED not supported!"}]}
2025-06-15 16:37:50,820 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 8
2025-06-15 16:37:50,833 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2050-05-29","agreementDateTo":"2060-05-29","country":"SPAIN","selectedRisks":["NOT_SUPPORTED_1","NOT_SUPPORTED_2"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:37:50,841 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_9","description":"Risk Type ic = NOT_SUPPORTED_1 not supported!"},{"errorCode":"ERROR_CODE_9","description":"Risk Type ic = NOT_SUPPORTED_2 not supported!"}]}
2025-06-15 16:37:50,842 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 10
2025-06-15 16:37:50,863 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2030-05-25","agreementDateTo":"2031-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL","TRAVEL_CANCELLATION"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":100.00},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":100.00}]}
2025-06-15 16:37:50,921 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"uuid":"8ef81255-f4c3-4f27-a4b4-bdbe951f34aa","agreementDateFrom":"2030-05-25","agreementDateTo":"2031-05-29","country":"SPAIN","agreementPremium":2504.50,"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":100.00,"personPremium":1052.75,"personRisks":[{"riskIc":"TRAVEL_MEDICAL","premium":1014.75},{"riskIc":"TRAVEL_CANCELLATION","premium":38.00}]},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":100.00,"personPremium":1451.75,"personRisks":[{"riskIc":"TRAVEL_MEDICAL","premium":1383.75},{"riskIc":"TRAVEL_CANCELLATION","premium":68.00}]}]}
2025-06-15 16:37:50,921 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 64
2025-06-15 16:37:50,945 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2050-05-29","agreementDateTo":"2060-05-29","country":"SPAIN","selectedRisks":null,"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-06-15 16:37:50,949 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_6","description":"Field selectedRisks must not be empty!"}]}
2025-06-15 16:37:50,949 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 5
2025-06-15 16:37:50,972 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-15 16:37:50,982 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-15 16:37:50,984 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-15 16:37:50,991 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
