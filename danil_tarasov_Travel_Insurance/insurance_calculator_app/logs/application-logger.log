2025-07-02 15:20:25,555 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [travel_insurance.core.repositories.ClassifierRepositoryTest]: ClassifierRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-07-02 15:20:26,282 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration travel_insurance.InsuranceApplication for test class travel_insurance.core.repositories.ClassifierRepositoryTest
2025-07-02 15:20:28,065 [Test worker] INFO  t.c.r.ClassifierRepositoryTest - Starting ClassifierRepositoryTest using Java 19.0.2 with PID 1108 (started by Оксана in C:\Users\Оксана\IdeaProjects\travel_insurance\danil_tarasov_Travel_Insurance\insurance_calculator_app)
2025-07-02 15:20:28,075 [Test worker] INFO  t.c.r.ClassifierRepositoryTest - No active profile set, falling back to 1 default profile: "h2"
2025-07-02 15:20:30,715 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-02 15:20:31,413 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 666 ms. Found 15 JPA repository interfaces.
2025-07-02 15:20:32,000 [Test worker] INFO  o.s.b.t.a.j.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor - Replacing 'dataSource' DataSource bean with embedded version
2025-07-02 15:20:32,714 [Test worker] INFO  o.s.j.d.e.EmbeddedDatabaseFactory - Starting embedded database: url='jdbc:h2:mem:133b9469-7739-42c5-9b07-d806d4835d91;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2025-07-02 15:20:34,424 [Test worker] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-02 15:20:35,012 [Test worker] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.0.Final
2025-07-02 15:20:35,125 [Test worker] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-02 15:20:36,108 [Test worker] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-02 15:20:36,393 [Test worker] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-02 15:20:41,058 [Test worker] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-02 15:20:41,155 [Test worker] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-02 15:20:43,099 [Test worker] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-02 15:20:46,762 [Test worker] INFO  t.c.r.ClassifierRepositoryTest - Started ClassifierRepositoryTest in 20.141 seconds (process running for 27.041)
2025-07-02 15:20:49,902 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [travel_insurance.core.repositories.ClassifierValueRepositoryTest]: ClassifierValueRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-07-02 15:20:49,986 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration travel_insurance.InsuranceApplication for test class travel_insurance.core.repositories.ClassifierValueRepositoryTest
2025-07-02 15:20:50,548 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [travel_insurance.core.repositories.TMTMCountryDefaultDayRateRepositoryTest]: TMTMCountryDefaultDayRateRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-07-02 15:20:50,607 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration travel_insurance.InsuranceApplication for test class travel_insurance.core.repositories.TMTMCountryDefaultDayRateRepositoryTest
2025-07-02 15:20:58,165 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [travel_insurance.core.validations.integration.AgreementDateFromValidationIntegrationTest]: AgreementDateFromValidationIntegrationTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-07-02 15:20:58,551 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration travel_insurance.InsuranceApplication for test class travel_insurance.core.validations.integration.AgreementDateFromValidationIntegrationTest
2025-07-02 15:20:59,445 [Test worker] INFO  t.c.v.i.AgreementDateFromValidationIntegrationTest - Starting AgreementDateFromValidationIntegrationTest using Java 19.0.2 with PID 1108 (started by Оксана in C:\Users\Оксана\IdeaProjects\travel_insurance\danil_tarasov_Travel_Insurance\insurance_calculator_app)
2025-07-02 15:20:59,467 [Test worker] INFO  t.c.v.i.AgreementDateFromValidationIntegrationTest - No active profile set, falling back to 1 default profile: "h2"
2025-07-02 15:21:04,558 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-02 15:21:05,334 [Test worker] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 775 ms. Found 15 JPA repository interfaces.
2025-07-02 15:21:07,558 [Test worker] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-02 15:21:07,733 [Test worker] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn21: url=jdbc:h2:mem:testdb user=SA
2025-07-02 15:21:07,747 [Test worker] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-02 15:21:08,684 [Test worker] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-02 15:21:08,708 [Test worker] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-02 15:21:08,853 [Test worker] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-02 15:21:09,058 [Test worker] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-02 15:21:10,815 [Test worker] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-02 15:21:10,847 [Test worker] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-02 15:21:15,005 [Test worker] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-02 15:21:21,163 [Test worker] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-07-02 15:21:21,658 [Test worker] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-07-02 15:21:21,664 [Test worker] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-07-02 15:21:21,706 [Test worker] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 21 ms
2025-07-02 15:21:21,842 [Test worker] INFO  t.c.v.i.AgreementDateFromValidationIntegrationTest - Started AgreementDateFromValidationIntegrationTest in 23.194 seconds (process running for 62.121)
2025-07-02 15:21:23,023 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [travel_insurance.restTest.internal.TravelGetAgreementControllerTestCase2]: TravelGetAgreementControllerTestCase2 does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-07-02 15:21:23,200 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration travel_insurance.InsuranceApplication for test class travel_insurance.restTest.internal.TravelGetAgreementControllerTestCase2
2025-07-02 15:21:23,721 [Test worker] INFO  t.r.i.TravelGetAgreementRequestLogger - REQUEST: agreement uuid = UNKNOWN_UUID
2025-07-02 15:21:24,130 [Test worker] INFO  t.r.i.TravelGetAgreementResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_18","description":"Agreement with uuid = UNKNOWN_UUID not found!"}]}
2025-07-02 15:21:24,131 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 409
2025-07-02 15:21:24,602 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [travel_insurance.restTest.v1.agreement.AgreementLevelV1TestCases]: AgreementLevelV1TestCases does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-07-02 15:21:24,764 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration travel_insurance.InsuranceApplication for test class travel_insurance.restTest.v1.agreement.AgreementLevelV1TestCases
2025-07-02 15:21:24,996 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2020-08-25","agreementDateTo":"2030-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_MEDICAL"]}
2025-07-02 15:21:25,007 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_1","description":"Field agreementDateFrom must be in the future!"}]}
2025-07-02 15:21:25,007 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 34
2025-07-02 15:21:25,033 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":null,"agreementDateTo":"2060-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_MEDICAL"]}
2025-07-02 15:21:25,039 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_2","description":"Field agreementDateFrom must not be empty!"}]}
2025-07-02 15:21:25,039 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 8
2025-07-02 15:21:25,079 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2029-08-25","agreementDateTo":"2020-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_MEDICAL"]}
2025-07-02 15:21:25,088 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_3","description":"Field agreementDateTo must be in the future!"},{"errorCode":"ERROR_CODE_5","description":"Field agreementDateFrom must be less than agreementDateTo!"}]}
2025-07-02 15:21:25,089 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 22
2025-07-02 15:21:25,110 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2030-10-30","agreementDateTo":null,"country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_MEDICAL"]}
2025-07-02 15:21:25,125 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_4","description":"Field agreementDateTo must not be empty!"}]}
2025-07-02 15:21:25,125 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 23
2025-07-02 15:21:25,174 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2030-05-20","agreementDateTo":"2025-10-10","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_MEDICAL"]}
2025-07-02 15:21:25,183 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_5","description":"Field agreementDateFrom must be less than agreementDateTo!"}]}
2025-07-02 15:21:25,184 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 14
2025-07-02 15:21:25,202 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":null,"personLastName":null,"personCode":null,"personBirthDate":null,"agreementDateFrom":null,"agreementDateTo":null,"country":null,"medicalRiskLimitLevel":null,"travelCost":null,"selectedRisks":["TRAVEL_MEDICAL"]}
2025-07-02 15:21:25,206 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_2","description":"Field agreementDateFrom must not be empty!"},{"errorCode":"ERROR_CODE_4","description":"Field agreementDateTo must not be empty!"},{"errorCode":"ERROR_CODE_10","description":"Field country must not be empty!"},{"errorCode":"ERROR_CODE_13","description":"Field medicalRiskLimitLevel must not be empty!"},{"errorCode":"ERROR_CODE_11","description":"Field personBirthDate must not be empty!"},{"errorCode":"ERROR_CODE_16","description":"Field personCode must not be empty!"},{"errorCode":"ERROR_CODE_7","description":"Field personFirstName must not be empty!"},{"errorCode":"ERROR_CODE_8","description":"Field personLastName must not be empty!"}]}
2025-07-02 15:21:25,207 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 7
2025-07-02 15:21:25,254 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":null,"personLastName":null,"personCode":null,"personBirthDate":null,"agreementDateFrom":null,"agreementDateTo":null,"country":null,"medicalRiskLimitLevel":null,"travelCost":null,"selectedRisks":null}
2025-07-02 15:21:25,260 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_2","description":"Field agreementDateFrom must not be empty!"},{"errorCode":"ERROR_CODE_4","description":"Field agreementDateTo must not be empty!"},{"errorCode":"ERROR_CODE_10","description":"Field country must not be empty!"},{"errorCode":"ERROR_CODE_6","description":"Field selectedRisks must not be empty!"},{"errorCode":"ERROR_CODE_11","description":"Field personBirthDate must not be empty!"},{"errorCode":"ERROR_CODE_16","description":"Field personCode must not be empty!"},{"errorCode":"ERROR_CODE_7","description":"Field personFirstName must not be empty!"},{"errorCode":"ERROR_CODE_8","description":"Field personLastName must not be empty!"}]}
2025-07-02 15:21:25,260 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 9
2025-07-02 15:21:25,315 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2050-05-29","agreementDateTo":"2060-05-29","country":"","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_MEDICAL"]}
2025-07-02 15:21:25,321 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_10","description":"Field country must not be empty!"}]}
2025-07-02 15:21:25,321 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 11
2025-07-02 15:21:25,345 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2050-05-29","agreementDateTo":"2060-05-29","country":null,"medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_MEDICAL"]}
2025-07-02 15:21:25,352 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_10","description":"Field country must not be empty!"}]}
2025-07-02 15:21:25,353 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 14
2025-07-02 15:21:25,376 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [travel_insurance.restTest.v1.person.PersonLevelV1TestCases]: PersonLevelV1TestCases does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-07-02 15:21:25,513 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration travel_insurance.InsuranceApplication for test class travel_insurance.restTest.v1.person.PersonLevelV1TestCases
2025-07-02 15:21:25,530 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2030-05-25","agreementDateTo":"2032-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_MEDICAL"]}
2025-07-02 15:21:25,534 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_7","description":"Field personFirstName must not be empty!"}]}
2025-07-02 15:21:25,539 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 10
2025-07-02 15:21:25,556 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_MEDICAL"]}
2025-07-02 15:21:25,561 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_8","description":"Field personLastName must not be empty!"}]}
2025-07-02 15:21:25,561 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 7
2025-07-02 15:21:25,587 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":null,"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_MEDICAL"]}
2025-07-02 15:21:25,591 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_11","description":"Field personBirthDate must not be empty!"}]}
2025-07-02 15:21:25,591 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 11
2025-07-02 15:21:25,614 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2030-05-29","agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_MEDICAL"]}
2025-07-02 15:21:25,619 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_12","description":"Field personBirthDate must be in the past!"}]}
2025-07-02 15:21:25,619 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 11
2025-07-02 15:21:25,637 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":null,"personBirthDate":"2000-05-29","agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_EVACUATION"]}
2025-07-02 15:21:25,689 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_16","description":"Field personCode must not be empty!"}]}
2025-07-02 15:21:25,690 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 56
2025-07-02 15:21:25,704 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":null,"personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2030-05-25","agreementDateTo":"2031-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_MEDICAL"]}
2025-07-02 15:21:25,709 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_7","description":"Field personFirstName must not be empty!"}]}
2025-07-02 15:21:25,710 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 8
2025-07-02 15:21:25,731 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":null,"personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_MEDICAL"]}
2025-07-02 15:21:25,736 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_8","description":"Field personLastName must not be empty!"}]}
2025-07-02 15:21:25,737 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 9
2025-07-02 15:21:25,751 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"","personBirthDate":"2000-05-29","agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_EVACUATION"]}
2025-07-02 15:21:25,754 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_16","description":"Field personCode must not be empty!"}]}
2025-07-02 15:21:25,756 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 7
2025-07-02 15:21:25,766 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [travel_insurance.restTest.v1.risk_travel_cancellation.TravelCancellationRiskV1TestCases]: TravelCancellationRiskV1TestCases does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-07-02 15:21:25,807 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration travel_insurance.InsuranceApplication for test class travel_insurance.restTest.v1.risk_travel_cancellation.TravelCancellationRiskV1TestCases
2025-07-02 15:21:25,822 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_CANCELLATION"]}
2025-07-02 15:21:25,834 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_19","description":"Field travelCost must not be empty!"}]}
2025-07-02 15:21:25,835 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 16
2025-07-02 15:21:25,847 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [travel_insurance.restTest.v1.risk_travel_medical.TravelMedicalRiskV1TestCases]: TravelMedicalRiskV1TestCases does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-07-02 15:21:25,887 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration travel_insurance.InsuranceApplication for test class travel_insurance.restTest.v1.risk_travel_medical.TravelMedicalRiskV1TestCases
2025-07-02 15:21:25,905 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["TRAVEL_MEDICAL"]}
2025-07-02 15:21:26,126 [Test worker] INFO  t.c.m.p.ProposalGeneratorQueueSenderStubImpl - PROPOSAL GENERATION message content: {"uuid":"5349186f-082f-49fd-a815-9d2d4d3952b1","agreementDateFrom":1937433600000,"agreementDateTo":2064009600000,"country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","travelCost":null,"personBirthDate":959558400000,"medicalRiskLimitLevel":"LEVEL_10000","risks":[{"riskIc":"TRAVEL_MEDICAL","premium":4028.75}]}],"agreementPremium":4028.75}
2025-07-02 15:21:26,131 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"uuid":"5349186f-082f-49fd-a815-9d2d4d3952b1","personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","agreementPremium":4028.75,"risks":[{"riskIc":"TRAVEL_MEDICAL","premium":4028.75}]}
2025-07-02 15:21:26,132 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 231
2025-07-02 15:21:26,155 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [travel_insurance.restTest.v1.risks.RiskLevelV1TestCases]: RiskLevelV1TestCases does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-07-02 15:21:26,220 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration travel_insurance.InsuranceApplication for test class travel_insurance.restTest.v1.risks.RiskLevelV1TestCases
2025-07-02 15:21:26,239 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":[]}
2025-07-02 15:21:26,266 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_6","description":"Field selectedRisks must not be empty!"}]}
2025-07-02 15:21:26,266 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 29
2025-07-02 15:21:26,301 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["NOT_VALID_RISK_IC_1"]}
2025-07-02 15:21:26,334 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_9","description":"Risk Type ic = NOT_VALID_RISK_IC_1 not supported!"}]}
2025-07-02 15:21:26,334 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 35
2025-07-02 15:21:26,540 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":["NOT_VALID_RISK_IC_1","NOT_VALID_RISK_IC_2"]}
2025-07-02 15:21:26,556 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_9","description":"Risk Type ic = NOT_VALID_RISK_IC_1 not supported!"},{"errorCode":"ERROR_CODE_9","description":"Risk Type ic = NOT_VALID_RISK_IC_2 not supported!"}]}
2025-07-02 15:21:26,556 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 25
2025-07-02 15:21:26,654 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLogger - REQUEST: {"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null,"selectedRisks":null}
2025-07-02 15:21:26,662 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLogger - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_6","description":"Field selectedRisks must not be empty!"}]}
2025-07-02 15:21:26,664 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 34
2025-07-02 15:21:26,698 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [travel_insurance.restTest.v2.agreement.AgreementLevelV2TestCases]: AgreementLevelV2TestCases does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-07-02 15:21:26,754 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration travel_insurance.InsuranceApplication for test class travel_insurance.restTest.v2.agreement.AgreementLevelV2TestCases
2025-07-02 15:21:26,784 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2010-05-29","agreementDateTo":"2050-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-07-02 15:21:26,796 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_1","description":"Field agreementDateFrom must be in the future!"}]}
2025-07-02 15:21:26,798 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 21
2025-07-02 15:21:26,821 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":null,"agreementDateTo":"2060-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-07-02 15:21:26,831 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_2","description":"Field agreementDateFrom must not be empty!"}]}
2025-07-02 15:21:26,832 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 19
2025-07-02 15:21:26,862 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2050-05-29","agreementDateTo":"2010-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-07-02 15:21:26,869 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_3","description":"Field agreementDateTo must be in the future!"},{"errorCode":"ERROR_CODE_5","description":"Field agreementDateFrom must be less than agreementDateTo!"}]}
2025-07-02 15:21:26,870 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 14
2025-07-02 15:21:26,898 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2060-05-29","agreementDateTo":null,"country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-07-02 15:21:26,902 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_4","description":"Field agreementDateTo must not be empty!"}]}
2025-07-02 15:21:26,904 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 8
2025-07-02 15:21:26,922 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2050-05-29","agreementDateTo":"2030-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-07-02 15:21:26,926 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_5","description":"Field agreementDateFrom must be less than agreementDateTo!"}]}
2025-07-02 15:21:26,927 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 7
2025-07-02 15:21:26,949 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2050-05-29","agreementDateTo":"2060-05-29","country":"NOT_SUPPORTED","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-07-02 15:21:26,955 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_15","description":"Country value = NOT_SUPPORTED not supported!"}]}
2025-07-02 15:21:26,955 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 10
2025-07-02 15:21:26,976 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2050-05-29","agreementDateTo":"2060-05-29","country":"","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-07-02 15:21:27,030 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_10","description":"Field country must not be empty!"}]}
2025-07-02 15:21:27,032 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 61
2025-07-02 15:21:27,095 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2050-05-29","agreementDateTo":"2060-05-29","country":null,"selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-07-02 15:21:27,106 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_10","description":"Field country must not be empty!"}]}
2025-07-02 15:21:27,106 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 14
2025-07-02 15:21:27,150 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [travel_insurance.restTest.v2.person.PersonLevelV2TestCases]: PersonLevelV2TestCases does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-07-02 15:21:27,172 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration travel_insurance.InsuranceApplication for test class travel_insurance.restTest.v2.person.PersonLevelV2TestCases
2025-07-02 15:21:27,212 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":null,"medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":null,"medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-07-02 15:21:27,217 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_11","description":"Field personBirthDate must not be empty!"},{"errorCode":"ERROR_CODE_11","description":"Field personBirthDate must not be empty!"}]}
2025-07-02 15:21:27,218 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 11
2025-07-02 15:21:27,236 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":null,"personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":null,"personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-07-02 15:21:27,240 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_7","description":"Field personFirstName must not be empty!"},{"errorCode":"ERROR_CODE_7","description":"Field personFirstName must not be empty!"}]}
2025-07-02 15:21:27,240 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 7
2025-07-02 15:21:27,279 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-07-02 15:21:27,282 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_7","description":"Field personFirstName must not be empty!"}]}
2025-07-02 15:21:27,282 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 4
2025-07-02 15:21:27,300 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"","personCode":"123456-12345","personBirthDate":"2000-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-07-02 15:21:27,336 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_8","description":"Field personLastName must not be empty!"}]}
2025-07-02 15:21:27,336 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 39
2025-07-02 15:21:27,358 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":null,"personCode":"123456-12345","personBirthDate":"2000-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":null,"personCode":"123456-12345","personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-07-02 15:21:27,360 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_8","description":"Field personLastName must not be empty!"},{"errorCode":"ERROR_CODE_8","description":"Field personLastName must not be empty!"}]}
2025-07-02 15:21:27,360 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 4
2025-07-02 15:21:27,374 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":null,"medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-07-02 15:21:27,377 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_11","description":"Field personBirthDate must not be empty!"}]}
2025-07-02 15:21:27,377 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 4
2025-07-02 15:21:27,407 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2100-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-07-02 15:21:27,416 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_12","description":"Field personBirthDate must be in the past!"}]}
2025-07-02 15:21:27,417 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 11
2025-07-02 15:21:27,430 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-07-02 15:21:27,434 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_7","description":"Field personFirstName must not be empty!"},{"errorCode":"ERROR_CODE_7","description":"Field personFirstName must not be empty!"}]}
2025-07-02 15:21:27,435 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 6
2025-07-02 15:21:27,466 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":null,"personBirthDate":"2000-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-07-02 15:21:27,468 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_16","description":"Field personCode must not be empty!"}]}
2025-07-02 15:21:27,469 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 4
2025-07-02 15:21:27,485 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"","personBirthDate":"2000-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"","personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-07-02 15:21:27,490 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_16","description":"Field personCode must not be empty!"},{"errorCode":"ERROR_CODE_16","description":"Field personCode must not be empty!"}]}
2025-07-02 15:21:27,490 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 7
2025-07-02 15:21:27,547 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":null,"personBirthDate":"2000-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":null,"personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-07-02 15:21:27,554 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_16","description":"Field personCode must not be empty!"},{"errorCode":"ERROR_CODE_16","description":"Field personCode must not be empty!"}]}
2025-07-02 15:21:27,555 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 53
2025-07-02 15:21:27,574 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":null,"personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-07-02 15:21:27,578 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_7","description":"Field personFirstName must not be empty!"}]}
2025-07-02 15:21:27,578 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 7
2025-07-02 15:21:27,619 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":null,"personCode":"123456-12345","personBirthDate":"2000-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-07-02 15:21:27,624 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_8","description":"Field personLastName must not be empty!"}]}
2025-07-02 15:21:27,625 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 7
2025-07-02 15:21:27,640 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"","personBirthDate":"2000-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-07-02 15:21:27,643 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_16","description":"Field personCode must not be empty!"}]}
2025-07-02 15:21:27,644 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 7
2025-07-02 15:21:27,674 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2100-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2100-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-07-02 15:21:27,679 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_12","description":"Field personBirthDate must be in the past!"},{"errorCode":"ERROR_CODE_12","description":"Field personBirthDate must be in the past!"}]}
2025-07-02 15:21:27,680 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 12
2025-07-02 15:21:27,703 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"","personCode":"123456-12345","personBirthDate":"2000-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"","personCode":"123456-12345","personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-07-02 15:21:27,706 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_8","description":"Field personLastName must not be empty!"},{"errorCode":"ERROR_CODE_8","description":"Field personLastName must not be empty!"}]}
2025-07-02 15:21:27,707 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 6
2025-07-02 15:21:27,722 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [travel_insurance.restTest.v2.risk_travel_cancellation.TravelCancellationRiskV2TestCases]: TravelCancellationRiskV2TestCases does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-07-02 15:21:27,757 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration travel_insurance.InsuranceApplication for test class travel_insurance.restTest.v2.risk_travel_cancellation.TravelCancellationRiskV2TestCases
2025-07-02 15:21:27,771 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2031-05-25","agreementDateTo":"2035-05-29","country":"SPAIN","selectedRisks":["TRAVEL_CANCELLATION"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-07-02 15:21:27,775 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_19","description":"Field travelCost must not be empty!"},{"errorCode":"ERROR_CODE_19","description":"Field travelCost must not be empty!"}]}
2025-07-02 15:21:27,782 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 14
2025-07-02 15:21:27,839 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [travel_insurance.restTest.v2.risk_travel_medical.TravelMedicalRiskV2TestCases]: TravelMedicalRiskV2TestCases does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-07-02 15:21:27,907 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration travel_insurance.InsuranceApplication for test class travel_insurance.restTest.v2.risk_travel_medical.TravelMedicalRiskV2TestCases
2025-07-02 15:21:28,042 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2050-05-29","agreementDateTo":"2060-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"","travelCost":null}]}
2025-07-02 15:21:28,047 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_13","description":"Field medicalRiskLimitLevel must not be empty!"}]}
2025-07-02 15:21:28,047 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 13
2025-07-02 15:21:28,069 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2050-05-29","agreementDateTo":"2060-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":null,"travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":null,"travelCost":null}]}
2025-07-02 15:21:28,294 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_13","description":"Field medicalRiskLimitLevel must not be empty!"},{"errorCode":"ERROR_CODE_13","description":"Field medicalRiskLimitLevel must not be empty!"}]}
2025-07-02 15:21:28,294 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 229
2025-07-02 15:21:28,424 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2050-05-29","agreementDateTo":"2060-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"NOT_SUPPORTED","travelCost":null}]}
2025-07-02 15:21:28,430 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_14","description":"MedicalRiskLimitLevel value = NOT_SUPPORTED not supported!"}]}
2025-07-02 15:21:28,431 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 12
2025-07-02 15:21:28,486 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2050-05-29","agreementDateTo":"2060-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"","travelCost":null}]}
2025-07-02 15:21:28,502 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_13","description":"Field medicalRiskLimitLevel must not be empty!"},{"errorCode":"ERROR_CODE_13","description":"Field medicalRiskLimitLevel must not be empty!"}]}
2025-07-02 15:21:28,502 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 59
2025-07-02 15:21:28,532 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2050-05-29","agreementDateTo":"2060-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":null,"travelCost":null}]}
2025-07-02 15:21:28,536 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_13","description":"Field medicalRiskLimitLevel must not be empty!"}]}
2025-07-02 15:21:28,536 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 14
2025-07-02 15:21:28,574 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2050-05-29","agreementDateTo":"2060-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"NOT_SUPPORTED_1","travelCost":null},{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"NOT_SUPPORTED_2","travelCost":null}]}
2025-07-02 15:21:28,640 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_14","description":"MedicalRiskLimitLevel value = NOT_SUPPORTED_1 not supported!"},{"errorCode":"ERROR_CODE_14","description":"MedicalRiskLimitLevel value = NOT_SUPPORTED_2 not supported!"}]}
2025-07-02 15:21:28,641 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 84
2025-07-02 15:21:28,700 [Test worker] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [travel_insurance.restTest.v2.risks.RiskLevelV2TestCases]: RiskLevelV2TestCases does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-07-02 15:21:28,741 [Test worker] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration travel_insurance.InsuranceApplication for test class travel_insurance.restTest.v2.risks.RiskLevelV2TestCases
2025-07-02 15:21:28,751 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2050-05-29","agreementDateTo":"2060-05-29","country":"SPAIN","selectedRisks":[],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-07-02 15:21:28,754 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_6","description":"Field selectedRisks must not be empty!"}]}
2025-07-02 15:21:28,755 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 6
2025-07-02 15:21:28,780 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2050-05-29","agreementDateTo":"2060-05-29","country":"SPAIN","selectedRisks":["NOT_SUPPORTED"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-07-02 15:21:28,793 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_9","description":"Risk Type ic = NOT_SUPPORTED not supported!"}]}
2025-07-02 15:21:28,793 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 14
2025-07-02 15:21:28,807 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2050-05-29","agreementDateTo":"2060-05-29","country":"SPAIN","selectedRisks":["NOT_SUPPORTED_1","NOT_SUPPORTED_2"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-07-02 15:21:28,815 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_9","description":"Risk Type ic = NOT_SUPPORTED_1 not supported!"},{"errorCode":"ERROR_CODE_9","description":"Risk Type ic = NOT_SUPPORTED_2 not supported!"}]}
2025-07-02 15:21:28,815 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 11
2025-07-02 15:21:28,871 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2030-05-25","agreementDateTo":"2031-05-29","country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL","TRAVEL_CANCELLATION"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":100.00},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":100.00}]}
2025-07-02 15:21:29,000 [Test worker] INFO  t.c.m.p.ProposalGeneratorQueueSenderStubImpl - PROPOSAL GENERATION message content: {"uuid":"e2805fbe-f4a3-43b3-977f-a1d990d56c12","agreementDateFrom":1905897600000,"agreementDateTo":1937779200000,"country":"SPAIN","selectedRisks":["TRAVEL_MEDICAL","TRAVEL_CANCELLATION"],"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","travelCost":100.00,"personBirthDate":959558400000,"medicalRiskLimitLevel":"LEVEL_10000","risks":[{"riskIc":"TRAVEL_MEDICAL","premium":1014.75},{"riskIc":"TRAVEL_CANCELLATION","premium":38.00}]},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","travelCost":100.00,"personBirthDate":-626054400000,"medicalRiskLimitLevel":"LEVEL_10000","risks":[{"riskIc":"TRAVEL_MEDICAL","premium":1383.75},{"riskIc":"TRAVEL_CANCELLATION","premium":68.00}]}],"agreementPremium":2504.50}
2025-07-02 15:21:29,008 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"uuid":"e2805fbe-f4a3-43b3-977f-a1d990d56c12","agreementDateFrom":"2030-05-25","agreementDateTo":"2031-05-29","country":"SPAIN","agreementPremium":2504.50,"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2000-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":100.00,"personPremium":1052.75,"personRisks":[{"riskIc":"TRAVEL_MEDICAL","premium":1014.75},{"riskIc":"TRAVEL_CANCELLATION","premium":38.00}]},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"1950-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":100.00,"personPremium":1451.75,"personRisks":[{"riskIc":"TRAVEL_MEDICAL","premium":1383.75},{"riskIc":"TRAVEL_CANCELLATION","premium":68.00}]}]}
2025-07-02 15:21:29,008 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 139
2025-07-02 15:21:29,033 [Test worker] INFO  t.r.v.TravelCalculatePremiumRequestLoggerV2 - REQUEST: {"agreementDateFrom":"2050-05-29","agreementDateTo":"2060-05-29","country":"SPAIN","selectedRisks":null,"persons":[{"personFirstName":"Vasja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-05-29","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null},{"personFirstName":"Petja","personLastName":"Pupkin","personCode":"123456-12345","personBirthDate":"2010-03-01","medicalRiskLimitLevel":"LEVEL_10000","travelCost":null}]}
2025-07-02 15:21:29,038 [Test worker] INFO  t.r.v.TravelCalculatePremiumResponseLoggerV2 - RESPONSE: {"errors":[{"errorCode":"ERROR_CODE_6","description":"Field selectedRisks must not be empty!"}]}
2025-07-02 15:21:29,038 [Test worker] INFO  t.r.c.TravelRestRequestExecutionTimeLogger - Request processing time (ms): 6
2025-07-02 15:21:29,061 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-02 15:21:29,078 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-02 15:21:29,079 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-02 15:21:29,126 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
